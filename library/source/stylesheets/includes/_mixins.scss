//
// Mixins
// ========================================================================
// _mixins.scss
// @version   2.0 | June 30th 2013
// @packege   bonsai
// @author    Beau Charman | @beaucharman | http://www.beaucharman.me
// @link      https://github.com/beaucharman/bonsai
// @license   MIT license
//



//
// Breakpoints
// Thank you http://css-tricks.com/media-queries-sass-3-2-and-codekit/
//
@mixin breakpoint($point: $grid__float_breakpoint, $condition: min-width) {
  @media screen and ($condition: $point) { @content; }
}



//
// Box sizing
//
@mixin box-sizing($box_model: border-box) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}



//
// Grid system
//

// Make Row
@mixin make-row {
  // Negative margin the row out to align the content of columns
  margin-left: -$grid__column_padding;
  margin-right: -$grid__column_padding;
  @extend %clearfix; // Then clear the floated columns
}
// Make Column
// @param  {integer} $columns
// @param  {boolean} $collapse | column auto collapses
@mixin make-column($columns, $collapse: true, $breakpoint: $grid__float_breakpoint) {

  // Calculate width based on number of columns available
  @if ($collapse == true) {
    @include breakpoint($breakpoint) {
      width: percentage($columns / $grid__columns);
    }
  } @else {
    width: percentage($columns / $grid__columns);
  }
}

// Make Column Offset
// @param  {integer} $columns
@mixin make-column-offset($columns) {
  @media (min-width: $grid__float_breakpoint) {
    margin-left: percentage($columns / $grid__columns);
  }
}



//
// Background RGBA
//
@mixin background-rgba($color, $opacity: 0.5)
{
  background-color: $color;
  background-color: rgba($color, $opacity);
}


//
// Mixins: vendor prefixes
// ======================================================================== /

//
// Single side border-radius
//
@mixin border-top-radius($top_right: 0, $bottom_right: 0, $bottom_left: 0, $top_left: 0) {
  border-top-right-radius: $top;
  border-bottom-right-radius: $right;
  border-bottom-left-radius: $bottom;
  border-top-left-radius: $left;
}



//
// Drop shadows
//
@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
          box-shadow: $shadow;
}



//
// Transitions
//
@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}
@mixin transition-delay($transition_delay) {
  -webkit-transition-delay: $transition_delay;
     -moz-transition-delay: $transition_delay;
       -o-transition-delay: $transition_delay;
          transition-delay: $transition_delay;
}
@mixin transition-duration($transition_duration) {
  -webkit-transition-duration: $transition_duration;
     -moz-transition-duration: $transition_duration;
       -o-transition-duration: $transition_duration;
          transition-duration: $transition_duration;
}



//
// Transformations
//
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
     -moz-transform: rotate($degrees);
      -ms-transform: rotate($degrees);
       -o-transform: rotate($degrees);
          transform: rotate($degrees);
}
@mixin scale($ratio) {
  -webkit-transform: scale($ratio);
     -moz-transform: scale($ratio);
      -ms-transform: scale($ratio);
       -o-transform: scale($ratio);
          transform: scale($ratio);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
     -moz-transform: translate($x, $y);
      -ms-transform: translate($x, $y);
       -o-transform: translate($x, $y);
          transform: translate($x, $y);
}
@mixin skew($x, $y) {
  -webkit-transform: skew($x, $y);
     -moz-transform: skew($x, $y);
      -ms-transform: skewX($x) skewY($y); // See https://github.com/twitter/bootstrap/issues/4885
       -o-transform: skew($x, $y);
          transform: skew($x, $y);
  -webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
     -moz-transform: translate3d($x, $y, $z);
       -o-transform: translate3d($x, $y, $z);
          transform: translate3d($x, $y, $z);
}




//
// Animation
//
@mixin animation($animation) {
  -webkit-animation: $animation; /* Safari 4+ */
     -moz-animation: $animation; /* Fx 5+ */
      -ms-animation: $animation; /* IE */
       -o-animation: $animation; /* Opera 12+ */
          animation: $animation;
}



//
// Keyframes
//
@mixin keyframes($handle) {
  @-webkit-keyframes $handle { @content; }
     @-moz-keyframes $handle { @content; }
      @-ms-keyframes $handle { @content; }
       @-o-keyframes $handle { @content; }
          @keyframes $handle { @content; }
}



//
// Backface visibility
//
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
@mixin backface-visibility($visibility){
  -webkit-backface-visibility: $visibility;
     -moz-backface-visibility: $visibility;
          backface-visibility: $visibility;
}



//
// User select
//
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
     -moz-user-select: $select;
      -ms-user-select: $select;
       -o-user-select: $select;
          user-select: $select;
}


//
// Opacity
//
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity_ie: $opacity * 100;
  filter: "alpha(opacity=#{$opacity_ie})"; // IE8
}



//
// Placeholder text
//
@mixin placeholder($color: $input_color_placeholder) {
  :-moz-placeholder            { color: $color; } // Firefox 4-18
  ::-moz-placeholder           { color: $color; } // Firefox 19+
  :-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
  ::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}



//
// Resize anything
//
@mixin resizable($direction) {
  resize: $direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}



//
// CSS3 Content Columns
//
@mixin content-columns($width, $count, $gap) {
  -webkit-column-width: $width;
     -moz-column-width: $width;
          column-width: $width;
  -webkit-column-count: $count;
     -moz-column-count: $count;
          column-count: $count;
  -webkit-column-gap: $gap;
     -moz-column-gap: $gap;
          column-gap: $gap;
}



//
// Optional hyphenation
//
@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: $mode;
     -moz-hyphens: $mode;
      -ms-hyphens: $mode;
       -o-hyphens: $mode;
          hyphens: $mode;
}



//
// Gradients
//
@mixin gradient-horizontal($start_color: #555, $end_color: #333) {
  background-color: $end_color;
  background-image: -moz-linear-gradient(left, $start_color, $end_color); // FF 3.6+
  background-image: -webkit-gradient(linear, 0 0, 100% 0, from($start_color), to($end_color)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(left, $start_color, $end_color); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(left, $start_color, $end_color); // Opera 11.10
  background-image: linear-gradient(to right, $start_color, $end_color); // Standard, IE10
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie_hex_str($start_color)}', endColorstr='#{ie_hex_str($end_color)}', GradientType=1); // IE9 and down
}

@mixin gradient-vertical($start_color: #555, $end_color: #333) {
  background-color: $end_color;
  background-image: -moz-linear-gradient(top, $start_color, $end_color); // FF 3.6+
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($start_color), to($end_color)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, $start_color, $end_color); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, $start_color, $end_color); // Opera 11.10
  background-image: linear-gradient(to bottom, $start_color, $end_color); // Standard, IE10
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie_hex_str($start_color)}', endColorstr='#{ie_hex_str($end_color)}', GradientType=0); // IE9 and down
}

@mixin gradient-directional($start_color: #555, $end_color: #333, $deg: 45deg) {
  background-color: $end_color;
  background-repeat: repeat-x;
  background-image: -moz-linear-gradient($deg, $start_color, $end_color); // FF 3.6+
  background-image: -webkit-linear-gradient($deg, $start_color, $end_color); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient($deg, $start_color, $end_color); // Opera 11.10
  background-image: linear-gradient($deg, $start_color, $end_color); // Standard, IE10
}

@mixin gradient-horizontal-three-colors($start_color: #00b3ee, $mid_color: #7a43b6, $color_stop: 50%, $end_color: #c3325f) {
  background-color: mix($mid_color, $end_color, 80%);
  background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from($start_color), color-stop($color_stop, $mid_color), to($end_color));
  background-image: -webkit-linear-gradient(left, $start_color, $mid_color $color_stop, $end_color);
  background-image: -moz-linear-gradient(left, $start_color, $mid_color $color_stop, $end_color);
  background-image: -o-linear-gradient(left, $start_color, $mid_color $color_stop, $end_color);
  background-image: linear-gradient(to right, $start_color, $mid_color $color_stop, $end_color);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie_hex_str($start_color)}', endColorstr='#{ie_hex_str($end_color)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin gradient-vertical-three-colors($start_color: #00b3ee, $mid_color: #7a43b6, $color_stop: 50%, $end_color: #c3325f) {
  background-color: mix($mid_color, $end_color, 80%);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($start_color), color-stop($color_stop, $mid_color), to($end_color));
  background-image: -webkit-linear-gradient($start_color, $mid_color $color_stop, $end_color);
  background-image: -moz-linear-gradient(top, $start_color, $mid_color $color_stop, $end_color);
  background-image: -o-linear-gradient($start_color, $mid_color $color_stop, $end_color);
  background-image: linear-gradient($start_color, $mid_color $color_stop, $end_color);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie_hex_str($start_color)}', endColorstr='#{ie_hex_str($end_color)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin gradient-radial($innerColor: #555, $outerColor: #333) {
  background-color: $outerColor;
  background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($innerColor), to($outerColor));
  background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
  background-image: -moz-radial-gradient(circle, $innerColor, $outerColor);
  background-image: -o-radial-gradient(circle, $innerColor, $outerColor);
  background-repeat: no-repeat;
}

@mixin gradient-striped($color: #555, $angle: 45deg) {
  background-color: $color;
  background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
  background-image: -webkit-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
  background-image: -moz-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
  background-image: -o-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
  background-image: linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
}



//
// Reset filters for IE
//
// Useful for when you want to remove a gradient from an element.
@mixin reset-filter() {
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}



//
// Center-align a block level element
//
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}



//
// Sizing shortcuts
//
@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size, $size);
}



//
// Text overflow
//
// Requires inline-block or block for proper styling
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}



//
// Retina images
//
// Retina background-image support with non-retina fall back
@mixin retina-image($file_1x, $file_2x, $width_1x, $height_1x) {
  background-image: url("#{$file_1x}");

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url("#{$file_2x}");
    background-size: $width_1x $height_1x;
  }
}
